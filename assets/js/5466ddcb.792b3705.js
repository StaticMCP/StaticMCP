"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[747],{3690:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"rfc","title":"RFC","description":"StaticMCP - Static Model Context Protocol","source":"@site/docs/rfc.md","sourceDirName":".","slug":"/rfc","permalink":"/docs/rfc","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"defaultSidebar","next":{"title":"Standard","permalink":"/docs/standard"}}');var r=i(4848),t=i(8453);const l={sidebar_position:1},c="RFC",o={},d=[{value:"StaticMCP - Static Model Context Protocol",id:"staticmcp---static-model-context-protocol",level:2},{value:"Abstract",id:"abstract",level:2},{value:"1. Introduction",id:"1-introduction",level:2},{value:"1.1 Background",id:"11-background",level:3},{value:"1.2 Motivation",id:"12-motivation",level:3},{value:"1.3 Scope",id:"13-scope",level:3},{value:"2. Architecture Overview",id:"2-architecture-overview",level:2},{value:"2.1 Core Principles",id:"21-core-principles",level:3},{value:"2.2 System Components",id:"22-system-components",level:3},{value:"3. File Structure Specification",id:"3-file-structure-specification",level:2},{value:"3.1 Directory Layout",id:"31-directory-layout",level:3},{value:"3.2 Manifest File (mcp.json)",id:"32-manifest-file-mcpjson",level:3},{value:"4. Request Mapping",id:"4-request-mapping",level:2},{value:"4.1 Resource Requests",id:"41-resource-requests",level:3},{value:"4.1.1 URI Encoding Rules",id:"411-uri-encoding-rules",level:4},{value:"4.2 Tool Requests",id:"42-tool-requests",level:3},{value:"5. Response Format",id:"5-response-format",level:2},{value:"5.1 Resource Response Files",id:"51-resource-response-files",level:3},{value:"5.2 Tool Response Files",id:"52-tool-response-files",level:3},{value:"6. Bridge Server Specification",id:"6-bridge-server-specification",level:2},{value:"6.1 Requirements",id:"61-requirements",level:3},{value:"6.2 Error Handling",id:"62-error-handling",level:3},{value:"7. Generation Process",id:"7-generation-process",level:2},{value:"7.1 Build Pipeline",id:"71-build-pipeline",level:3},{value:"7.2 Incremental Updates",id:"72-incremental-updates",level:3},{value:"8. Security Considerations",id:"8-security-considerations",level:2},{value:"8.1 File System Safety",id:"81-file-system-safety",level:3},{value:"8.2 Content Security",id:"82-content-security",level:3},{value:"8.3 Read-only Access",id:"83-read-only-access",level:3},{value:"9. Performance Considerations",id:"9-performance-considerations",level:2},{value:"9.1 File Organization",id:"91-file-organization",level:3},{value:"9.2 Caching Strategy",id:"92-caching-strategy",level:3},{value:"10. Compatibility",id:"10-compatibility",level:2},{value:"11. References",id:"11-references",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"rfc",children:"RFC"})}),"\n",(0,r.jsx)(n.h2,{id:"staticmcp---static-model-context-protocol",children:"StaticMCP - Static Model Context Protocol"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Version:"})," 0.1"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Status:"})," Draft"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Date:"})," 2025-08-06"]}),"\n",(0,r.jsx)(n.h2,{id:"abstract",children:"Abstract"}),"\n",(0,r.jsx)(n.p,{children:"This document defines StaticMCP, an extension to the Model Context Protocol (MCP) that enables serving AI model context through pre-generated static files rather than dynamic server applications. StaticMCP maintains full compatibility with the MCP specification while offering significant improvements in performance, cost, scalability, and deployment simplicity."}),"\n",(0,r.jsx)(n.h2,{id:"1-introduction",children:"1. Introduction"}),"\n",(0,r.jsx)(n.h3,{id:"11-background",children:"1.1 Background"}),"\n",(0,r.jsx)(n.p,{children:"The Model Context Protocol (MCP) provides a standardized interface for AI models to interact with external tools and resources. However, many use cases involve serving relatively static data that doesn't require real-time computation or database queries. Traditional MCP implementations in these scenarios introduce unnecessary complexity and operational overhead."}),"\n",(0,r.jsx)(n.h3,{id:"12-motivation",children:"1.2 Motivation"}),"\n",(0,r.jsx)(n.p,{children:"StaticMCP addresses several key challenges:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance"}),": Eliminates runtime computation for faster response times"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cost"}),": Reduces infrastructure requirements to static file hosting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reliability"}),": Removes server-side failure points and scaling bottlenecks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Simplicity"}),": Enables deployment to any static hosting platform"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Caching"}),": Leverages existing web caching infrastructure at all levels"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"13-scope",children:"1.3 Scope"}),"\n",(0,r.jsx)(n.p,{children:"This RFC defines:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The StaticMCP file structure and organization"}),"\n",(0,r.jsx)(n.li,{children:"Mapping between MCP operations and static file paths"}),"\n",(0,r.jsx)(n.li,{children:"Bridge server requirements and behavior"}),"\n",(0,r.jsx)(n.li,{children:"Compatibility requirements with existing MCP clients"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"2-architecture-overview",children:"2. Architecture Overview"}),"\n",(0,r.jsx)(n.h3,{id:"21-core-principles",children:"2.1 Core Principles"}),"\n",(0,r.jsx)(n.p,{children:"StaticMCP operates on four fundamental principles:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pre-computation"}),": All responses are generated at build time"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"File-based mapping"}),": MCP operations map directly to file system paths"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Standard compliance"}),": Full compatibility with MCP protocol semantics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Web-native"}),": Leverages standard HTTP caching and CDN capabilities"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"22-system-components",children:"2.2 System Components"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:i(3812).A+"",width:"1094",height:"896"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Generator Tools"}),": Scripts/applications that create static files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Build Process"}),": Orchestrates file generation and validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Static File Host"}),": Standard web server or CDN hosting JSON files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"StaticMCP Bridge"}),": Lightweight proxy translating MCP to HTTP requests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MCP Client"}),": Standard MCP client (AI models, applications)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"3-file-structure-specification",children:"3. File Structure Specification"}),"\n",(0,r.jsx)(n.h3,{id:"31-directory-layout",children:"3.1 Directory Layout"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"staticmcp-root/\n  \u251c\u2500\u2500 mcp.json                     # Server manifest\n  \u251c\u2500\u2500 resources/                   # Resource responses\n  \u2502     \u251c\u2500\u2500 {encoded-uri}.json     # Individual resource files\n  \u2502     \u2514\u2500\u2500 index.json             # Resource listing\n  \u2514\u2500\u2500 tools/                       # Tool call responses\n        \u2514\u2500\u2500 {tool-name}/           # Tool-specific directory\n              \u2514\u2500\u2500 {arg}.json       # Parameterized responses\n"})}),"\n",(0,r.jsx)(n.h3,{id:"32-manifest-file-mcpjson",children:"3.2 Manifest File (mcp.json)"}),"\n",(0,r.jsx)(n.p,{children:"The root manifest file defines server capabilities:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "protocolVersion": "2025-06-18",\n  "serverInfo": {\n    "name": "My StaticMCP Server",\n    "version": "1.0.0"\n  },\n  "capabilities": {\n    "resources": [\n      {\n        "uri": "file://README.md",\n        "name": "Project README",\n        "description": "Main project documentation",\n        "mimeType": "text/markdown"\n      }\n    ],\n    "tools": [\n      {\n        "name": "search",\n        "description": "Search through project content",\n        "inputSchema": {\n          "type": "object",\n          "properties": {\n            "query": {\n              "type": "string",\n              "description": "Search query"\n            }\n          },\n          "required": ["query"]\n        }\n      }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"4-request-mapping",children:"4. Request Mapping"}),"\n",(0,r.jsx)(n.h3,{id:"41-resource-requests",children:"4.1 Resource Requests"}),"\n",(0,r.jsxs)(n.p,{children:["MCP resource requests map to files in the ",(0,r.jsx)(n.code,{children:"resources/"})," directory:"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"MCP Request"}),(0,r.jsx)(n.th,{children:"File Path"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"resources/read"})," with URI ",(0,r.jsx)(n.code,{children:"file://README.md"})]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"resources/README.md.json"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"resources/read"})," with URI ",(0,r.jsx)(n.code,{children:"web://docs/api"})]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"resources/docs/api.json"})})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"411-uri-encoding-rules",children:"4.1.1 URI Encoding Rules"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Remove everything before ",(0,r.jsx)(n.code,{children:"://"})," (inclusive)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/"})," refers to directory"]}),"\n",(0,r.jsx)(n.li,{children:"No special characters allowed"}),"\n",(0,r.jsx)(n.li,{children:"Ensure resulting filename is valid for target file system"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"42-tool-requests",children:"4.2 Tool Requests"}),"\n",(0,r.jsxs)(n.p,{children:["Tool calls map to files in the ",(0,r.jsx)(n.code,{children:"tools/{tool-name}/"})," directory:"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Tool Call"}),(0,r.jsx)(n.th,{children:"File Path"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'search("rust")'})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"tools/search/rust.json"})})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"5-response-format",children:"5. Response Format"}),"\n",(0,r.jsx)(n.h3,{id:"51-resource-response-files",children:"5.1 Resource Response Files"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "uri": "file://README.md",\n  "mimeType": "text/markdown",\n  "text": "# My Project\\n\\nThis is the project README..."\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"52-tool-response-files",children:"5.2 Tool Response Files"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "content": [\n    {\n      "type": "text",\n      "text": "Found 3 results for \'rust\':\\n1. Rust implementation guide\\n2. Rust vs Python comparison\\n3. Memory safety in Rust"\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"6-bridge-server-specification",children:"6. Bridge Server Specification"}),"\n",(0,r.jsx)(n.h3,{id:"61-requirements",children:"6.1 Requirements"}),"\n",(0,r.jsx)(n.p,{children:"The StaticMCP bridge server MUST:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Accept standard MCP JSON-RPC requests"}),"\n",(0,r.jsx)(n.li,{children:"Translate requests to appropriate file paths"}),"\n",(0,r.jsx)(n.li,{children:"Return standard MCP responses"}),"\n",(0,r.jsx)(n.li,{children:"Handle file not found cases gracefully"}),"\n",(0,r.jsx)(n.li,{children:"Support proper HTTP caching headers"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"62-error-handling",children:"6.2 Error Handling"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Scenario"}),(0,r.jsx)(n.th,{children:"HTTP Status"}),(0,r.jsx)(n.th,{children:"MCP Response"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"File not found"}),(0,r.jsx)(n.td,{children:"404"}),(0,r.jsx)(n.td,{children:"Resource/tool not available error"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Invalid JSON"}),(0,r.jsx)(n.td,{children:"500"}),(0,r.jsx)(n.td,{children:"Internal server error"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Bridge unavailable"}),(0,r.jsx)(n.td,{children:"503"}),(0,r.jsx)(n.td,{children:"Service temporarily unavailable"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"7-generation-process",children:"7. Generation Process"}),"\n",(0,r.jsx)(n.h3,{id:"71-build-pipeline",children:"7.1 Build Pipeline"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Collection"}),": Gather source data from various inputs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Response Generation"}),": Create individual JSON response files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Manifest Creation"}),": Generate the root ",(0,r.jsx)(n.code,{children:"mcp.json"})," file"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Validation"}),": Verify file structure and JSON validity"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimization"}),": Compress and optimize files for delivery"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Deployment"}),": Upload to static hosting platform"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"72-incremental-updates",children:"7.2 Incremental Updates"}),"\n",(0,r.jsx)(n.p,{children:"For efficiency, generators SHOULD support incremental builds:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Track file modification times"}),"\n",(0,r.jsx)(n.li,{children:"Maintain dependency graphs"}),"\n",(0,r.jsx)(n.li,{children:"Only regenerate changed files"}),"\n",(0,r.jsx)(n.li,{children:"Update manifest with new timestamps"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"8-security-considerations",children:"8. Security Considerations"}),"\n",(0,r.jsx)(n.h3,{id:"81-file-system-safety",children:"8.1 File System Safety"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Validate all generated file names to prevent directory traversal"}),"\n",(0,r.jsx)(n.li,{children:"Sanitize user input used in file path generation"}),"\n",(0,r.jsx)(n.li,{children:"Implement appropriate file size limits"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"82-content-security",children:"8.2 Content Security"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Validate JSON schema compliance for all generated files"}),"\n",(0,r.jsx)(n.li,{children:"Implement content scanning for sensitive information"}),"\n",(0,r.jsx)(n.li,{children:"Use secure random number generation for parameter hashing"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"83-read-only-access",children:"8.3 Read-only Access"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Files are read-only and cannot be amended by external request"}),"\n",(0,r.jsx)(n.li,{children:"For write access support, consider a hybrid approach"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"9-performance-considerations",children:"9. Performance Considerations"}),"\n",(0,r.jsx)(n.h3,{id:"91-file-organization",children:"9.1 File Organization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Limit directory fan-out to prevent file system performance issues"}),"\n",(0,r.jsx)(n.li,{children:"Use appropriate file naming schemes for efficient lookup"}),"\n",(0,r.jsx)(n.li,{children:"Consider file size limits for optimal CDN performance"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"92-caching-strategy",children:"9.2 Caching Strategy"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Implement aggressive caching at all levels"}),"\n",(0,r.jsx)(n.li,{children:"Use content-based ETags for cache validation"}),"\n",(0,r.jsx)(n.li,{children:"Consider pre-warming CDN caches for frequently accessed files"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"10-compatibility",children:"10. Compatibility"}),"\n",(0,r.jsx)(n.p,{children:"StaticMCP implementations MUST maintain full semantic compatibility with the MCP specification. Clients should not be able to distinguish between dynamic and static MCP servers based on response content."}),"\n",(0,r.jsx)(n.h2,{id:"11-references",children:"11. References"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://modelcontextprotocol.io",children:"Model Context Protocol Specification"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.jsonrpc.org/specification",children:"JSON-RPC 2.0 Specification"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc3986",children:"RFC 3986: Uniform Resource Identifier (URI)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc7234",children:"RFC 7234: HTTP/1.1 Caching"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},3812:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/sys_comp-16390367b711bc082e1f28184b64cabc.png"},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var s=i(6540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);